// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package main.proxies;

public class SlackImageFile
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject slackImageFileMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Main.SlackImageFile";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Url_private("Url_private"),
		SlackImageFile_SlackImageRecognitionRequest("Main.SlackImageFile_SlackImageRecognitionRequest");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public SlackImageFile(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Main.SlackImageFile"));
	}

	protected SlackImageFile(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject slackImageFileMendixObject)
	{
		if (slackImageFileMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Main.SlackImageFile", slackImageFileMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Main.SlackImageFile");

		this.slackImageFileMendixObject = slackImageFileMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'SlackImageFile.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static main.proxies.SlackImageFile initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return main.proxies.SlackImageFile.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static main.proxies.SlackImageFile initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new main.proxies.SlackImageFile(context, mendixObject);
	}

	public static main.proxies.SlackImageFile load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return main.proxies.SlackImageFile.initialize(context, mendixObject);
	}

	public static java.util.List<main.proxies.SlackImageFile> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<main.proxies.SlackImageFile> result = new java.util.ArrayList<main.proxies.SlackImageFile>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Main.SlackImageFile" + xpathConstraint))
			result.add(main.proxies.SlackImageFile.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Url_private
	 */
	public final java.lang.String getUrl_private()
	{
		return getUrl_private(getContext());
	}

	/**
	 * @param context
	 * @return value of Url_private
	 */
	public final java.lang.String getUrl_private(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Url_private.toString());
	}

	/**
	 * Set value of Url_private
	 * @param url_private
	 */
	public final void setUrl_private(java.lang.String url_private)
	{
		setUrl_private(getContext(), url_private);
	}

	/**
	 * Set value of Url_private
	 * @param context
	 * @param url_private
	 */
	public final void setUrl_private(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String url_private)
	{
		getMendixObject().setValue(context, MemberNames.Url_private.toString(), url_private);
	}

	/**
	 * @return value of SlackImageFile_SlackImageRecognitionRequest
	 */
	public final main.proxies.SlackImageRecognitionRequest getSlackImageFile_SlackImageRecognitionRequest() throws com.mendix.core.CoreException
	{
		return getSlackImageFile_SlackImageRecognitionRequest(getContext());
	}

	/**
	 * @param context
	 * @return value of SlackImageFile_SlackImageRecognitionRequest
	 */
	public final main.proxies.SlackImageRecognitionRequest getSlackImageFile_SlackImageRecognitionRequest(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		main.proxies.SlackImageRecognitionRequest result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.SlackImageFile_SlackImageRecognitionRequest.toString());
		if (identifier != null)
			result = main.proxies.SlackImageRecognitionRequest.load(context, identifier);
		return result;
	}

	/**
	 * Set value of SlackImageFile_SlackImageRecognitionRequest
	 * @param slackimagefile_slackimagerecognitionrequest
	 */
	public final void setSlackImageFile_SlackImageRecognitionRequest(main.proxies.SlackImageRecognitionRequest slackimagefile_slackimagerecognitionrequest)
	{
		setSlackImageFile_SlackImageRecognitionRequest(getContext(), slackimagefile_slackimagerecognitionrequest);
	}

	/**
	 * Set value of SlackImageFile_SlackImageRecognitionRequest
	 * @param context
	 * @param slackimagefile_slackimagerecognitionrequest
	 */
	public final void setSlackImageFile_SlackImageRecognitionRequest(com.mendix.systemwideinterfaces.core.IContext context, main.proxies.SlackImageRecognitionRequest slackimagefile_slackimagerecognitionrequest)
	{
		if (slackimagefile_slackimagerecognitionrequest == null)
			getMendixObject().setValue(context, MemberNames.SlackImageFile_SlackImageRecognitionRequest.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.SlackImageFile_SlackImageRecognitionRequest.toString(), slackimagefile_slackimagerecognitionrequest.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return slackImageFileMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final main.proxies.SlackImageFile that = (main.proxies.SlackImageFile) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Main.SlackImageFile";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
