// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package main.proxies;

public class Emotion
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject emotionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Main.Emotion";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		Confidence("Confidence"),
		image_emotions("Main.image_emotions"),
		Emotion_Face("Main.Emotion_Face");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Emotion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Main.Emotion"));
	}

	protected Emotion(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject emotionMendixObject)
	{
		if (emotionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Main.Emotion", emotionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Main.Emotion");

		this.emotionMendixObject = emotionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Emotion.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static main.proxies.Emotion initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return main.proxies.Emotion.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static main.proxies.Emotion initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new main.proxies.Emotion(context, mendixObject);
	}

	public static main.proxies.Emotion load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return main.proxies.Emotion.initialize(context, mendixObject);
	}

	public static java.util.List<main.proxies.Emotion> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<main.proxies.Emotion> result = new java.util.ArrayList<main.proxies.Emotion>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Main.Emotion" + xpathConstraint))
			result.add(main.proxies.Emotion.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Confidence
	 */
	public final java.math.BigDecimal getConfidence()
	{
		return getConfidence(getContext());
	}

	/**
	 * @param context
	 * @return value of Confidence
	 */
	public final java.math.BigDecimal getConfidence(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Confidence.toString());
	}

	/**
	 * Set value of Confidence
	 * @param confidence
	 */
	public final void setConfidence(java.math.BigDecimal confidence)
	{
		setConfidence(getContext(), confidence);
	}

	/**
	 * Set value of Confidence
	 * @param context
	 * @param confidence
	 */
	public final void setConfidence(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal confidence)
	{
		getMendixObject().setValue(context, MemberNames.Confidence.toString(), confidence);
	}

	/**
	 * @return value of image_emotions
	 */
	public final main.proxies.SlackImageRecognitionRequest getimage_emotions() throws com.mendix.core.CoreException
	{
		return getimage_emotions(getContext());
	}

	/**
	 * @param context
	 * @return value of image_emotions
	 */
	public final main.proxies.SlackImageRecognitionRequest getimage_emotions(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		main.proxies.SlackImageRecognitionRequest result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.image_emotions.toString());
		if (identifier != null)
			result = main.proxies.SlackImageRecognitionRequest.load(context, identifier);
		return result;
	}

	/**
	 * Set value of image_emotions
	 * @param image_emotions
	 */
	public final void setimage_emotions(main.proxies.SlackImageRecognitionRequest image_emotions)
	{
		setimage_emotions(getContext(), image_emotions);
	}

	/**
	 * Set value of image_emotions
	 * @param context
	 * @param image_emotions
	 */
	public final void setimage_emotions(com.mendix.systemwideinterfaces.core.IContext context, main.proxies.SlackImageRecognitionRequest image_emotions)
	{
		if (image_emotions == null)
			getMendixObject().setValue(context, MemberNames.image_emotions.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.image_emotions.toString(), image_emotions.getMendixObject().getId());
	}

	/**
	 * @return value of Emotion_Face
	 */
	public final main.proxies.Face getEmotion_Face() throws com.mendix.core.CoreException
	{
		return getEmotion_Face(getContext());
	}

	/**
	 * @param context
	 * @return value of Emotion_Face
	 */
	public final main.proxies.Face getEmotion_Face(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		main.proxies.Face result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Emotion_Face.toString());
		if (identifier != null)
			result = main.proxies.Face.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Emotion_Face
	 * @param emotion_face
	 */
	public final void setEmotion_Face(main.proxies.Face emotion_face)
	{
		setEmotion_Face(getContext(), emotion_face);
	}

	/**
	 * Set value of Emotion_Face
	 * @param context
	 * @param emotion_face
	 */
	public final void setEmotion_Face(com.mendix.systemwideinterfaces.core.IContext context, main.proxies.Face emotion_face)
	{
		if (emotion_face == null)
			getMendixObject().setValue(context, MemberNames.Emotion_Face.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Emotion_Face.toString(), emotion_face.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return emotionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final main.proxies.Emotion that = (main.proxies.Emotion) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Main.Emotion";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
